{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","account","networkId","amount","dflInstance","dflAddress","DFLtotalSupply","currentmFILPower","maxBorroweFIL","borrowRateOfYear","lsupplyRateOfYear","eFIlAcount","useRate","EFILtotalSupply","mFIlAcount","MFILtotalSupply","a","this","initWeb3","loadBlockchainData","getTokenSupOfDFL","web3","window","ethereum","request","method","accounts","setState","eth","net","getId","console","log","getBalance","utils","fromWei","Contract","DFL","abi","address","methods","totalSupply","call","deFILInstance","DeFIL","borrowRatePerBlock","borrowRate","getCash","cash","totalReserves","reserves","totalBorrows","borrowAmount","supplyRatePerBlock","supplyRate","MFILInstance","MFIL","balanceOf","EFILInstance","EFIL","WhitePaperInterestRateModelInstance","WhitePaperInterestRateModel","utilizationRate","Web3","currentProvider","alert","on","chainId","networkInfo","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.255b8fd7.chunk.js","sourcesContent":["import React,{ Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport networkInfo from \"./abi/networkid.json\";\nimport DFL from \"./abi/DFL.json\";\nimport DeFIL from \"./abi/DeFIL.json\";\nimport EFIL from \"./abi/EFIL.json\";\nimport WhitePaperInterestRateModel from \"./abi/WhitePaperInterestRateModel.json\"\nimport MFIL from \"./abi/MFIL.json\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      account:null,\n      networkId:null,\n      amount:null,\n      dflInstance:null,\n      dflAddress:null,\n      DFLtotalSupply:null,\n      currentmFILPower:0,\n      maxBorroweFIL:0,\n      borrowRateOfYear:null,\n      lsupplyRateOfYear:null,\n      eFIlAcount:null,\n      useRate:null,\n      EFILtotalSupply:null,\n      mFIlAcount:null,\n      MFILtotalSupply:null\n    }\n  }\n  \n\n  async componentWillMount() {\n    await this.initWeb3()\n    await this.loadBlockchainData()\n    await this.getTokenSupOfDFL()\n  \n  }\n\n  //加载基本账户信息及网络信息\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' })\n    this.setState({ account: accounts[0] })\n\n    const networkId = await web3.eth.net.getId()\n    this.setState({ networkId })\n    console.log(accounts[0],networkId)\n\n    let amount = await web3.eth.getBalance(accounts[0])\n    amount = web3.utils.fromWei(amount, 'ether')\n    this.setState({ amount })\n\n  //加载化DFL\n    let dflInstance = new web3.eth.Contract(DFL.abi, DFL.address)\n    this.setState({ dflInstance })\n    this.setState({ dflAddress : dflInstance.address })\n    let DFLtotalSupply = await dflInstance.methods.totalSupply().call()\n    this.setState({DFLtotalSupply})\n\n  //加载DeFIL\n    let deFILInstance = new web3.eth.Contract(DeFIL.abi, DeFIL.address)\n    let borrowRate = await deFILInstance.methods.borrowRatePerBlock().call()\n    let cash = await deFILInstance.methods.getCash().call()\n    let reserves = await deFILInstance.methods.totalReserves().call()\n    let borrowAmount = await deFILInstance.methods.totalBorrows().call()\n\n    let borrowRateOfYear = web3.utils.fromWei(borrowRate, 'ether') *2102400 * 100\n    this.setState({borrowRateOfYear})\n\n    \n\n    let supplyRate = await deFILInstance.methods.supplyRatePerBlock().call()\n    let lsupplyRateOfYear = web3.utils.fromWei(supplyRate, 'ether') *2102400 * 100\n    this.setState({lsupplyRateOfYear})\n\n  //加载mFIl\n  let MFILInstance = new web3.eth.Contract(MFIL.abi, MFIL.address)\n  let mFIlAcount = await MFILInstance.methods.balanceOf(accounts[0]).call()\n  let MFILtotalSupply = await MFILInstance.methods.totalSupply().call()\n  MFILtotalSupply = web3.utils.fromWei(MFILtotalSupply,'ether')\n  mFIlAcount =  web3.utils.fromWei(mFIlAcount,'ether')\n  console.log(MFILtotalSupply,mFIlAcount)\n  this.setState({mFIlAcount})\n  this.setState({MFILtotalSupply})\n  \n\n  //加载eFIl\n    let EFILInstance = new web3.eth.Contract(EFIL.abi, EFIL.address)\n    let eFIlAcount = await EFILInstance.methods.balanceOf(accounts[0]).call()\n    let EFILtotalSupply = await EFILInstance.methods.totalSupply().call()\n    EFILtotalSupply = web3.utils.fromWei(EFILtotalSupply,'ether')\n    eFIlAcount =  web3.utils.fromWei(eFIlAcount,'ether')\n    this.setState({eFIlAcount})\n    this.setState({EFILtotalSupply})\n\n  //加载WhitePaperInterestRateModel  \n\n    let WhitePaperInterestRateModelInstance = new web3.eth.Contract(WhitePaperInterestRateModel.abi, WhitePaperInterestRateModel.address)\n    let useRate = await WhitePaperInterestRateModelInstance.methods.utilizationRate(cash,borrowAmount,reserves).call()\n    this.setState({useRate})\n\n\n  }  \n\n\n   //初始化web3\n   async initWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n\n  }\n\n  async componentDidMount(){\n    window.ethereum.on('chainChanged', (chainId) => {\n    console.log(\"chainId:\",chainId)\n\n    this.loadBlockchainData()\n    });\n     window.ethereum.on('accountsChanged', async()=>{\n    \n      await this.loadBlockchainData()\n \n    });\n  }\n\n\n  //DFL\n  async getTokenSupOfDFL(){\n    let totalSupply = await this.state.dflInstance.methods.totalSupply().call()\n    this.setState({totalSupply})\n    \n  }\n\n\n\n  render(){\n    let networkId \n    if (this.state.networkId === 0x4 || this.state.networkId === 0x1){\n      networkId = networkInfo[this.state.networkId]\n    }else{\n      networkId = \"未知\"\n    }\n    \n    console.log(networkId)\n    return (\n      <div>\n        <div> 账户：{this.state.account} </div>\n        <div> 网络：{ networkId } </div>\n        <div> 余额：{this.state.amount} ETH</div>\n        <div> eFIL存款利率：{this.state.lsupplyRateOfYear} %</div>\n        <div> eFIL贷款利率：{this.state.borrowRateOfYear} %</div>\n        <div> eFIL总流通量：{this.state.EFILtotalSupply} </div>\n        <div> eFIL使用率：{this.state.useRate} % </div>\n        <div> 我的eFIL数量：{this.state.eFIlAcount} </div>\n        <div> 已借出eFIL：{} </div>\n        <div> 可借eFIL：{} </div>\n        \n        <div> 我的mFIL数量：{this.state.eFIlAcount} </div>\n        <div> mFIL总流通量：{this.state.eFIlAcount} </div>\n        <div>---------------------------------</div>\n        <div> mFIL兑换eFIL:<input></input><button>确定</button></div>\n        <div> FIL兑换eFIL :<input></input><button>确定</button></div>\n        <div> eFIL兑换FIL :<input></input><button>确定</button></div>\n       \n        <div>---------------------------------</div>\n        <div> 质押算力：{this.state.currentmFILPower} mFIL</div>\n        <div> 最大可借：{this.state.maxBorroweFIL } eFIL</div>\n        <div> 获取mFIL(模拟质押算力置换mFIL)：<input></input>mFIL<button>确定</button></div>\n        <div> 借入eFIL数量：<input></input> eFIL <button>确定</button></div>\n        <div> 偿还eFIL数量：<input></input> eFIL <button>确定</button></div>\n        <div>---------------------------------</div>\n        <div>我的 DFL 奖励</div>\n        <div>供应比例FIL</div>\n        <div><button>获得DFLDFL奖励</button></div>\n        <div>---------------------------------</div>\n        <div>DeFIL 发行的股权代币奖励流动性贡献者</div>\n        <div>流通量：{}</div>\n        <div>估计每日产量：</div>\n        <div>估计减半时间：</div>\n        <div>发行量：</div>\n      </div>\n    )\n  }\n    \n  \n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}